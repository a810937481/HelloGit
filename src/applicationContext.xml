<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--<bean id="UserDao" class="com.PFB.UserDAOImpl"></bean>-->
    <!--<bean id="UserService" class="com.PFB.UserServiceImpl">-->
        <!--<property name="userDAO" ref="UserDao"/>-->
    <!--</bean>-->

    <!--<bean id="LogAroundAdvice" class="com.PFB.LogAroundAdvice"></bean>-->
    <!--<bean id="LogAdvice" class="com.PFB.LogAdvice"></bean>-->
    <!--<bean id="afterLogAdvice" class="com.PFB.AfterLogAdvice"></bean>-->
    <!--<bean id="throwsLogAdvice" class="com.PFB.ThrowsLogAdvice"></bean>-->

    <!--<bean id="userProxy" class="org.springframework.aop.framework.ProxyFactoryBean">-->
        <!--<property name="proxyInterfaces">-->
            <!--<value>com.PFB.UserService</value>-->
        <!--</property>-->
        <!--<property name="interceptorNames">-->
            <!--<list>-->
                <!--<value>LogAdvice</value>-->
                <!--<value>LogAroundAdvice</value>-->
                <!--<value>afterLogAdvice</value>-->
                <!--<value>throwsLogAdvice</value>-->
            <!--</list>-->
        <!--</property>-->
        <!--<property name="target" ref="UserService"></property>-->
    <!--</bean>-->

    <!-- 读取db.properties -->
    <context:property-placeholder location="classpath:jdbc.properties" />

    <context:component-scan base-package="bbs.service"/>

    <bean id="dataSource"
          class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init"
          destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="initialSize" value="20"/>
        <property name="maxActive" value="20"/>
        <property name="minIdle" value="0"/>
        <property name="maxWait" value="60000"/>
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <property name="minEvictableIdleTimeMillis" value="300000"/>
        <property name="testWhileIdle" value="false"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
        <property name="poolPreparedStatements" value="true"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations" value="classpath*:/bbs/mapper/*.xml"/>
        <property name="typeAliasesPackage" value="bbs.domain"/>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="basePackage">
            <value>bbs.dao</value>
        </property>
    </bean>

    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
          p:dataSource-ref="dataSource"/>

    <!--配置声明式事务，在使用处加注解@Transactional-->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

</beans>